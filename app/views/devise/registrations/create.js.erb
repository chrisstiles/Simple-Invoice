setTimeout(function() {
	var oldContent = $('.buttoncontent').text();
	var button = $('.hasloadingtext');

	if (button.is('input')) {
		button.val(oldContent);
		button.prop('disabled', false);
	} else {
	button.text(oldContent);
	}

	button.removeClass('loading hasloadingtext');
	$('.buttoncontent').empty().remove();
	
}, 200);

setTimeout(function() {
	pageBody.find('.loginloadingspinner').remove();
}, 200);

<% if resource.errors.any? %>

var pageBody = $('body'),
	validationErrors = $('#registervalidationerrors.registererrors'),
	errorHolder = $('#registervalidationerrors.registererrors .errorholder');

errorHolder.empty();

<% resource.errors.each do |key, message| %>

var key = "<%= key %>"

var errorInput = $(".registerbox input[name='user[" + key + "]']");
errorInput.addClass('haserror');

<% end %>

<% resource.errors.full_messages.each do |message| %>
	
	var message = '<%= message %>'
	errorHolder.append('<p>' + message + '</p>');

<% end %>

var validationsHeight = validationErrors.outerHeight(),
	negativeValidationsHeight = -1 * validationsHeight;

validationErrors.css({
	'margin-bottom' : negativeValidationsHeight,
	'display' : 'block'
});

validationsHeight += 15;

$('.registerformholder').css({
  '-webkit-transform' : 'translate3d(0, ' + validationsHeight + 'px, 0)',
  '-moz-transform'    : 'translate3d(0, ' + validationsHeight + 'px, 0)',
  '-ms-transform'     : 'translate3d(0, ' + validationsHeight + 'px, 0)',
  '-o-transform'      : 'translate3d(0, ' + validationsHeight + 'px, 0)',
  'transform'         : 'translate3d(0, ' + validationsHeight + 'px, 0)'
});


var registerBox = $('.registerbox');
var registerBoxPadding = parseInt(registerBox.css('padding-bottom'));

$('.registerbox').css({
	'padding-bottom' : validationsHeight + registerBoxPadding,
});

<% else %>

$('body').addClass('sessionchange');
window.location = '<%= invoices_path %>'


<% end %>

